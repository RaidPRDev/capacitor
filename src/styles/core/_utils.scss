/**
  Text Clamp
*/
@mixin textClamp($numOfColumns: 3) {

  display: -webkit-box;
  -webkit-line-clamp: $numOfColumns;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin ellipses() {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin sup($offset: 4px) {
  vertical-align: baseline;
  line-height: 0;
  top: 0;
  left: $offset;
}

/**
  Breakpoint tools
*/
@mixin querymaxheight($breakpoint) {
  @media (max-height: $breakpoint) {
    @content;
  }
}

@mixin querycustommax($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

@mixin querycustommin($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin querymin($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin querymax($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}